getwd()
g <- "joe"
g
g + "bin"
g.append("bin")
str_length(g)
install.packages("stringr")
library(stringr)
install.packages("pathClass")
g = paste(g, "bin")
g
g = paste(g, "bin")
file.path(..., fsep = .Platform$file.sep)
file.path("data", fsep=.Platform$file.sep)
file.path(c("data","bin"), fsep=.Platform$file.sep)
file.path("data","bin", fsep=.Platform$file.sep)
datafolder <- "data/"
list.files(datafolder)
list.files(datafolder)
datafolder <- "data"
list.files(datafolder)
list.files(".")
list.files("./data")
list.files("TheCountedData")
file.path(datafolder, "the-counted-2015.csv", fsep=.Platform$file.sep)
bb <- file.path(datafolder, "the-counted-2015.csv", fsep=.Platform$file.sep)
str_replace(bb, "5", "6")
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
View(shoots)
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
View(shoots)
View(shoots)
fp
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
print(shoot1)
shoot.columns
column(shoot)
shoot.column
shoot.names
shoot.name
names(shoot1)
names(shoot)
names(shoots)
shoots.names
shoots.name
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
View(pop)
View(pop)
unique(shoots)
unique(shoots$raceethnicity)
shoots <- shoots[shoots$raceethnicity["Other"], ]
shoots <- rbind(shoot1, shoot2)
shoots <- rbind(shoot1, shoot2)
shoots <- shoots[ , -which(names(shoots) %in% badcol)]
shoots <- shoots[shoots$raceethnicity == "Other", ]
sum(shoots$raceethnicity == "Other")
sum(shoots$raceethnicity == "White")
sum(shoots$raceethnicity == "Unknown")
shoots <- rbind(shoot1, shoot2)
sum(shoots$raceethnicity == "Unknown")
sum(shoots$raceethnicity == "Other")
sum(shoots$raceethnicity == "White")
sum(shoots$raceethnicity == "Black")
shoots <- shoots[ , -which(names(shoots) %in% badcol)]
shoots <- shoots[shoots$raceethnicity != "Other", ]
pop
shoots <- shoots[shoots$raceethnicity %in% c("Other", "Unknown")]
shoots <- shoots[-which(shoots$raceethnicity %in% c("Other", "Unknown")) ,]
library(plyr)
shootsrw <- ddply(shoots,"raceethnicity",transform,prop=number/sum(number))
shootsrw <- ddply(shoots,.("raceethnicity"),transform,prop=number/sum(number))
shoots$raceethnicity == "White"
sum(shoots$raceethnicity == "White")
unique(shoots$raceethnicity)
totshoots <- len(shoots)
totshoots <- length(shoots)
rcs = unique(shoots$raceethnicity)
prop <- c()
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r, pro)
}
print(r)
print(pro)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
}
fp = file.path(datafolder, "USDemographics.csv", fsep=.Platform$file.sep)
pop <- read.csv(fp)
print rcs
print(rcs)
list(rcs)
names(rcs)
rcs
c(rcs)
as.list(rcs)
b <- as.list(rcs)
b
print(b)
b[3]
b <- as.list(levels(rcs))
b
b[3]
b[3][1]
b[3,1]
b[3] == "Black"
as.array(rcs)
as.array(levels(rcs)
)
b <- as.array(levels(rcs))
b[0]
b[2]
b[1]
rcs <- as.array(levels(rcs))
prop <- c()
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
}
fp = file.path(datafolder, "USDemographics.csv", fsep=.Platform$file.sep)
totshoots
shoots.shape
size(shoots)
totshoots <- length(shoots$raceethnicity)
rcs = unique(shoots$raceethnicity)
rcs <- as.array(levels(rcs))
prop <- c()
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
}
fp = file.path(datafolder, "USDemographics.csv", fsep=.Platform$file.sep)
unique(shoots$raceethnicity)
length(unique(shoots$raceethnicity))
rcs <- as.array(levels(rcs))
rcs = unique(shoots$raceethnicity)
rcs <- as.array(levels(rcs))
prop <- list()
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
prop <- list(prop, list(r, pro))
}
print(prop)
totshoots <- length(shoots$raceethnicity)
rcs = unique(shoots$raceethnicity)
rcs <- as.array(levels(rcs))
prop <- c()
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
prop <- c(prop, list(r, pro))
}
print (prop)
prop <- data.frame(prop)
prop
prop <- data.frame(prop, names=c("Race","Proporition"))
prop
View(prop)
View(prop)
rcs = unique(shoots$raceethnicity)
rcs <- as.array(levels(rcs))
prop <- data.frame()
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
prop$r <- pro
}
prop <- data.frame()
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
prop$r <- c(pro)
}
data.frame(names=c("Race","Proportion"))
data.frame(names=c("Race","Proportion"))
b = data.frame(names=c("Race","Proportion"))
b
b = data.frame(names=c("Race","Proportion"))
b
b = data.frame(b, names=c("Race","Proportion"))
b
b = data.frame(b, names=c("Race","Proportion"))
b
rcs <- as.array(levels(rcs))
rcs = unique(shoots$raceethnicity)
rcs <- as.array(levels(rcs))
prop <- data.frame("Race"=c("Proportion"))
for (r in rcs)
{
b = sum(shoots$raceethnicity == r)
pro <- b/totshoots
print(r)
print(pro)
prop <- c(prop, r=c(pro))
}
prop
prop.index=prop$Race
prop
prop.index
rownames(prop)
rownames(prop) <- prop$Race
names(prop)
rownames(prop) <- prop$Race
rownames(prop) <- c(prop$Race)
rownames(prop)
rownames(prop) <- 1
as.array(prop)
p <- as.array(prop)
p
print(p)
data.frame(p, rownames=p[1])
shoots.describe()
describe(shoots)
summary(shoots)
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
source('C:/Documents and Settings/Philadelphia/Documents/semiLit/TheCountedAnalysis/wrangle.R')
fp = file.path(datafolder, "USDemographics.csv", fsep=.Platform$file.sep)
print(fp)
pop <- read.csv(fp)
summ
pop
pop
summ$month
names(summ)
summm <- data.frame(summ)
names(summm)
class(summ)
table(summ)
as.data.frame(summ)
View(shoots)
View(shoots)
summ
summ["state"]
summ[state]
rownames(summ)
summ
summary.data.frame(shoots)
summ = summary.data.frame(shoots)
summ
View(summm)
View(summm)
